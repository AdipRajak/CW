@page "/login"
@inject ILocalStorageService localStorage
@inject NavigationManager Navigation

<div class="container">
    <h3>Login</h3>
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" id="username" @bind="username" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" @bind="password" class="form-control" />
    </div>
    <button @onclick="HandleLogin" class="btn btn-primary">Login</button>
    <p>Don't have an account? <a href="/signup">Sign up</a></p>
</div>

@code {
    private string username;
    private string password;

    private async Task HandleLogin()
    {
        // Simulate authentication - Check if user credentials exist in local storage
        var savedUser = await localStorage.GetItemAsync<User>("user");

        if (savedUser != null && savedUser.Username == username && savedUser.Password == password)
        {
            await localStorage.SetItemAsync("isLoggedIn", true);
            Navigation.NavigateTo("/transactions"); // Redirect to transactions page
        }
        else
        {
            // Handle login failure (for now, we'll just display an alert)
            await JSRuntime.InvokeVoidAsync("alert", "Invalid credentials");
        }
    }
}
